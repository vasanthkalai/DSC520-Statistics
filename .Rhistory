answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}else{
if(x>=-1)
{
answer<-"Between -1 and 1"
}
else
{
answer<-"Less than -1"
}
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
}
else if(x>=-1){
answer<-"Between -1 and 1"
}
else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
rm(answer)
x<-rnorm(1)
if(x>1){
answer<-"Greater than 1"
} else if(x>=-1){
answer<-"Between -1 and 1"
} else{
answer<-"Less than -1"
}
library(ggplot2)
## Load the ggplot2 package
library(ggplot2)
## Set the working directory to the root of your DSC 520 directory
setwd("E:/Repos/StatisticsR/DSC520-Statistics/")
## Load the `data/r4ds/heights.csv` to
heights_df <- read.csv("data/acs-14-1yr-s0201.csv")
## Load the `data/r4ds/heights.csv` to
df <- read.csv("data/acs-14-1yr-s0201.csv")
## What are the elements in your data (including the categories and data types)?
## Categorical, numerical and binary
names(df)
df
## What are the elements in your data (including the categories and data types)?
## Categorical, numerical and binary
categories(df)
## What are the elements in your data (including the categories and data types)?
## Categorical, numerical and binary
data.entry(df)
## What are the elements in your data (including the categories and data types)?
## Categorical, numerical and binary
ggplot(data = mpg)
## What are the elements in your data (including the categories and data types)?
## Categorical, numerical and binary
ggplot(data = df)
## What are the elements in your data (including the categories and data types)?
## Categorical, numerical and binary
names(df)
##Please provide the output from the following functions: str(); nrow(); ncol()
str(df)
##Please provide the output from the following functions: str(); nrow(); ncol()
str(data1)
##Please provide the output from the following functions: str(); nrow(); ncol()
str(df)
nrow(df)
## Load the `data/r4ds/heights.csv` to
df <- read.csv("data/acs-14-1yr-s0201.csv")
##Please provide the output from the following functions: str(); nrow(); ncol()
str(df)
nrow(df)
ncol(df)
typeof(df)
attributes(df)
class(df)
## What are the elements in your data (including the categories and data types)?
## Categorical, numerical and binary
names(df)
typeof(df$Id)
typeof(df$Id2)
typeof(df$Geography)
attributes(df$Id)
class(df$Id)
x <-df$HSDegree
hist(x, breaks = 40, xlab = "Percentage of HS Degree", ylab = "Frequency", main = "Percentage of HS Degree Frequency Distribution")
#   Is it approximately symmetrical?
#Answer - No its skewed
#   Is it approximately bell-shaped?
#Answer - No its skewed
#   Is it approximately normal?
#Answer - No its skewed
#   If not normal, is the distribution skewed? If so, in which direction?
#Answer - Yes its skewed left (negative)
#   Include a normal curve to the Histogram that you plotted.
h <- hist(g, breaks = 10, density = 10,          col = "lightgray", xlab = "Percentage of HS Degree", ylab = "Frequency", main = "Percentage of HS Degree Frequency Distribution")
#   Is it approximately symmetrical?
#Answer - No its skewed
#   Is it approximately bell-shaped?
#Answer - No its skewed
#   Is it approximately normal?
#Answer - No its skewed
#   If not normal, is the distribution skewed? If so, in which direction?
#Answer - Yes its skewed left (negative)
#   Include a normal curve to the Histogram that you plotted.
h <- hist(g, breaks = 10, density = 10, col = "lightgray", xlab = "Percentage of HS Degree", ylab = "Frequency", main = "Percentage of HS Degree Frequency Distribution")
#   Is it approximately symmetrical?
#Answer - No its skewed
#   Is it approximately bell-shaped?
#Answer - No its skewed
#   Is it approximately normal?
#Answer - No its skewed
#   If not normal, is the distribution skewed? If so, in which direction?
#Answer - Yes its skewed left (negative)
#   Include a normal curve to the Histogram that you plotted.
h <- hist(x, breaks = 10, density = 10, col = "lightgray", xlab = "Percentage of HS Degree", ylab = "Frequency", main = "Percentage of HS Degree Frequency Distribution")
xfit <- seq(min(g), max(g), length = 40)
xfit <- seq(min(x), max(x), length = 40)
yfit <- dnorm(xfit, mean = mean(x), sd = sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col = "black", lwd = 2)
# Create a Probability Plot of the HSDegree variable.
library(qqplotr)
# Create a Probability Plot of the HSDegree variable.
install.packages(qqplotr)
# Create a Probability Plot of the HSDegree variable.
install.packages("qqplotr")
library(qqplotr)
# ploting data without line and labels
ggplot(mapping = aes(sample = df$HSDegree)) + stat_qq_point(size = 2)
# Now that you have looked at this data visually for normality,
#you will now quantify normality with numbers using the stat.desc() function.
#Include a screen capture of the results produced.
stat.desc(df)
# Now that you have looked at this data visually for normality,
#you will now quantify normality with numbers using the stat.desc() function.
#Include a screen capture of the results produced.
library(pastecs)
# Now that you have looked at this data visually for normality,
#you will now quantify normality with numbers using the stat.desc() function.
#Include a screen capture of the results produced.
install.packages("pastecs")
library(pastecs)
stat.desc(df)
library(qqplotr)
ggplot(mapping = aes(sample = df$HSDegree)) + stat_qq_point(size = 2)
